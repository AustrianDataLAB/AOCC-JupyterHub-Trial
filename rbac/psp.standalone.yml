--- 

apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: jupyter-hostpath-psp
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default,runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
spec:
  allowedHostPaths:
    - pathPrefix: "/testmount"
  privileged: false
  # Required to prevent escalations to root.
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  # Allow core volume types.
  volumes:
    - 'configMap'
    - 'hostPath'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'csi'
    - 'persistentVolumeClaim'
    - 'ephemeral'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    # Require the container to run without root privileges.
    rule: 'MustRunAsNonRoot'
  seLinux: #TODO lookup syntax
    rule: 'RunAsAny'
  #  rule: 'MustRunAs'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 1000000
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 100
        max: 1000
  readOnlyRootFilesystem: false

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jupyter-hostpath-psp
rules:
- apiGroups:
  - policy
  resourceNames:
  - jupyter-hostpath-psp
  resources:
  - podsecuritypolicies
  verbs:
  - use

---

# bind psp to namespace, because singleuser does not have a serviceaccount
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
 name: psp:binding:jupyter-hostpath-psp
roleRef:
 kind: ClusterRole
 name: jupyter-hostpath-psp
 apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  name: system:serviceaccounts:aocc-jupyterhub-trial
  apiGroup: rbac.authorization.k8s.io